name: Publish Docker image easylang_ui

on:
  release:
    types: [published]

jobs:
  easylang_ui:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: mywords/ui_service
          tags: |
            type=raw,value=${{ github.event.release.tag_name }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            API_HOST=${{ vars.API_HOST }}
            OAUTH_GOOGLE_ID=${{ secrets.OAUTH_GOOGLE_ID }}

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          port: ${{ secrets.VM_PORT }}
          # key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          password: ${{ secrets.VM_SSH_PASSWORD }}
          script: |
            echo "Pulling the latest image..."
            docker pull mywords/ui_service:${{ github.event.release.tag_name }}
            echo "Updating Docker Compose..."
            sed -i "s|image: mywords/ui_service:.*|image: mywords/ui_service:${{ github.event.release.tag_name }}|g" docker-compose.yml
            echo "Restarting the service..."
            docker-compose up -d --no-deps ui_service
            echo "Deployment complete."

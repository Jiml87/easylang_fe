name: Build Docker Image and push to registry

on:
  #   push:
  #     branches: ['production']

  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  packages: write
  pull-requests: write

env:
  # Use docker.io for Docker Hub if empty
  # REGISTRY: docker.io
  # IMAGE_NAME: serbenyuk
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}
  # Use `latest` as the tag to compare to if empty, assuming that it's already pushed
  COMPARE_TAG: latest

jobs:
  push_to_registries:
    name: 'Docker Build and Push to ACR'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: filmcore
          labels: |
            org.opencontainers.image.revision=${{ env.SHA }}
          tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=registry,ref=user/app:latest
          # cache-to: type=inline
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      # docker pull filmcoredipublic.azurecr.io/filmcore:70d98ea4135c4f662b237fe0a9a976be1e8843a2

      # - name: Add SHORT_SHA env property with commit short sha
      #   run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      # - run:
      #     docker build . -t  ${{ secrets.REGISTRY_LOGIN_SERVER }}/filmcore:${SHORT_SHA}
      #     docker push  ${{ secrets.REGISTRY_LOGIN_SERVER }}/filmcore:${SHORT_SHA}

      # - name: Build the frontend image and push it to ACR
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/filmcore:${SHORT_SHA}
      #     file: ./Dockerfile
